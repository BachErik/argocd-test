---
- name: Install Argo CD
  hosts: localhost
  become: yes
  tasks:
    - name: Add cert-manager to helm
      shell: helm repo add jetstack https://charts.jetstack.io --force-update && helm repo update
      ignore_errors: yes

    - name: Install cert-manager
      shell: helm install \
               cert-manager jetstack/cert-manager \
               --namespace cert-manager \
               --create-namespace \
               --version v1.14.5 \
               --set installCRDs=true

    - name: Create argocd namespace
      shell: kubectl create namespace argocd
      ignore_errors: yes

    - name: Add Argo CD repository
      shell: helm repo add argo https://argoproj.github.io/argo-helm
      ignore_errors: yes

    - name: Update repository using Helm
      shell: helm repo update
      ignore_errors: yes

    - name: Install Argo CD using Helm
      shell: helm install -n argocd argocd argo/argo-cd
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml
      ignore_errors: yes

    - name: Create Issuer
      shell: |
        kubectl apply -f - <<EOF
        apiVersion: cert-manager.io/v1
        kind: ClusterIssuer
        metadata:
          name: letsencrypt
        spec:
          acme:
            # The ACME server URL
            server: https://acme-v02.api.letsencrypt.org/directory
            # Email address used for ACME registration
            email: bacherik.info@gmail.com
            # Name of a secret used to store the ACME account private key
            privateKeySecretRef:
              name: letsencrypt
            # Enable the HTTP-01 challenge provider
            solvers:
              - http01:
                  ingress:
                    class: traefik
        EOF
      ignore_errors: yes

    - name: Create Ingress for Argo CD
      shell: |
        kubectl apply -f - <<EOF
        apiVersion: networking.k8s.io/v1
        kind: Ingress
        metadata:
          name: argocd
          namespace: argocd
          annotations:
            cert-manager.io/cluster-issuer: "letsencrypt"
        spec:
          tls:
          - hosts:
            - argocd.bacherik.eu
            secretName: argocd-tls
          rules:
          - host: argocd.bacherik.eu
            http:
              paths:
              - path: /
                pathType: Prefix
                backend:
                  service:
                    name: argocd-server
                    port:
                      number: 80
        EOF
      ignore_errors: yes

    - name: Get argocd-cm configmap
      shell: kubectl -n argocd get configmap argocd-cm -o yaml > /tmp/argocd-cm.yml
      ignore_errors: yes

    - name: Update argocd-cm configmap
      replace:
        path: /tmp/argocd-cm.yml
        regexp: 'example.com'
        replace: 'argocd.bacherik.eu'
      ignore_errors: yes

    - name: Apply the modified argocd-cm configmap
      shell: kubectl apply -f /tmp/argocd-cm.yml
      ignore_errors: yes

    - name: Apply TOO_MANY_REDIRECTS Fix for argocd
      shell: |
        kubectl apply -f - <<EOF
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: argocd-cmd-params-cm
          namespace: argocd
          labels:
            app.kubernetes.io/name: argocd-cmd-params-cm
            app.kubernetes.io/part-of: argocd
        data:
          server.insecure: "true"
        EOF
      ignore_errors: yes

    - name: Restart ArgoCD
      shell: kubectl --namespace argocd rollout restart deployment argocd-server
      ignore_errors: yes
    
    - name: Apply app dings
      shell: kubectl apply -f https://raw.githubusercontent.com/BachErik/argocd-test/master/ansible/applications.yml
